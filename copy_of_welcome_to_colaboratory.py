# -*- coding: utf-8 -*-
"""Copy of Welcome To Colaboratory

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kmETLDi18jDiQ7Wn9Tb_jyqfNzPfnQx3
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split

from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC

from sklearn.metrics import accuracy_score

data=pd.read_csv(r'/content/train.csv')
data2=pd.read_csv(r'/content/test.csv')

data.head()

data.shape

data.info()

data.describe()

data.isnull().sum()

nu = data.isnull().sum()
nu[nu>0]

sns.heatmap(data.isnull())

"""# -2 Clean data"""

def clean(df):
    df.drop(['Cabin','Name','Ticket','Embarked','Fare'],axis=1,inplace=True)
    df.Age=df.Age.fillna(df.Age.median())
    df.dropna()
    return df

clean(data)
clean(data2)

sns.heatmap(data2.isnull())

"""## -3 Data Analysis

"""

co=data.corr()

sns.heatmap(co,annot=True,fmt='.1f',linewidth=.5)

data.Survived.value_counts()

data.Sex.value_counts()

data.Sex.value_counts().plot.pie(autopct='%0.2f%%')

sns.histplot(data.Age)

"""# -4 Transform Data"""

pd.get_dummies(data.Sex)
pd.get_dummies(data2.Sex)

data

data2

data.info()

"""# -5 Creat Model"""

x=data.drop('Survived',axis=1)
y=data.Survived

x_data,x_data2,y_data,y_data2=train_test_split(x,y,test_size=.8)

accuracies = []

def all(model):
  model1.fit(x_data,y_data)
  pre =model1.predict(x_test)
  accuracy = accuracy_score(pre,y_test)
  print('Accuracy = ',accuracy)
  accuracies.append(accuracy)

model1=LogisticRegression()
all(model1)

Algorithm=['LogisticRegression','RandomForestClassifier','GradientBoostingClassifier','DecisionTreeClassifie','KNeighborsClassifier',
          'GaussianNB','SVC']